[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sciscraper"
version = "1.2.0"
description = "A bulk academic PDF extractor program, designed specifically for papers about behavioral science and design."
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
]
authors = ["John Fallot <john.fallot@gmail.com>"]
readme = "README.md"
repository = "https://github.com/Pathos315/sciscraper"


[tool.poetry.dependencies]
python = "^3.10"
google = "^3.0.0"
pandas = "^2.0.3"
pdfplumber = "^0.10.1"
requests = "^2.31.0"
tqdm = "^4.65.0"
numpy = "^1.25.1"
feedparser = "^6.0.10"
selectolax = "^0.3.14"
python-dotenv = "^1.0.0"
pydantic = "^2.0.3"
pandas-stubs = "^2.2.0.240218"
types-tqdm = "^4.66.0.20240106"


[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
python-semantic-release = "^7.34.6"
snakeviz = "^2.2.0"
types-psutil = "^5.9.5.20240205"
psutil = "^5.9.8"
memory-profiler = "^0.61.0"
ruff = "^0.2.2"

[tool.poetry.group.tests.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
requests-mock = "^1.11.0"
hypothesis = "^6.82.0"

[tool.poetry.group.formatting.dependencies]
black = "^23.7.0"

[tool.poetry.scripts]
sciscraper_cli = "sciscrape.main:main"

# only used in github actions
[tool.poetry.group.github-actions]
optional = true
[tool.poetry.group.github-actions.dependencies]
pytest-github-actions-annotate-failures = "^0.1.7"

[tool.pytest.ini_options]
addopts = "--cov=sciscrape --cov-report term-missing -v"
pythonpath = "."
testpaths = ".test"

[tool.ruff]
extend-exclude = [
    "docs/*",
    # External to the project's coding standards
    "tests/**/fixtures/*",
]
fix = true
line-length = 72
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
unfixable = [
    "ERA", # do not autoremove commented out code
]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "N818", #  Exception name should be named with an Error suffix
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry"]
known-third-party = ["poetry.core"]
required-imports = ["from __future__ import annotations"]

[tool.black]
target-version = ['py310']
line-length = 79 # Default
preview = true
extend-exclude = '''
/(
    \.git
  | _build
)/
'''

[tool.mypy]
exclude = ["tests", "src/profilers.py"]
namespace_packages = true
show_error_codes = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
